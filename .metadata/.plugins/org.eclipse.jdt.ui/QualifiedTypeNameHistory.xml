<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.provisioning.InMemoryUserDetailsManager"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="S05T02N01F02GPedroTejero.model.repository.JugadorRepository"/>
    <fullyQualifiedTypeName name="S05T02N01F02GPedroTejero.model.domain.Jugador"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.services.UserDetailsServiceImpl"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.jwt.AuthEntryPointJwt"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.jwt.AuthTokenFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.neo4j.Neo4jProperties.Authentication"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.AuthManager"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.CrossOrigin"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.jwt.JwtUtils"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.WebSecurityConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.payload.request.LoginRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.services.UserDetailsImpl"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.payload.response.JwtResponse"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.payload.request.SignupRequest"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.payload.response.MessageResponse"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.model.domain.Eroles"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.services.AuthenticationExtra"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContext"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.model.repository.JugadorRepository"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.model.domain.Jugador"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.model.domain.Role"/>
    <fullyQualifiedTypeName name="pruebaITAcademyJWT.demo.security.services.CustomAuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
</qualifiedTypeNameHistroy>
